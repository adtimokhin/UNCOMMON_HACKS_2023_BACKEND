{"ast":null,"code":"var _jsxFileName = \"/Users/christian-robinson/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nconst Form = _ref => {\n  _s();\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    title: '',\n    description: '',\n    eventDate: '',\n    eventTime: '',\n    eventLocation: '',\n    deadline: '',\n    selectedFile: '',\n    creator: '',\n    tags: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      description: '',\n      eventDate: '',\n      eventTime: '',\n      eventLocation: '',\n      deadline: '',\n      selectedFile: '',\n      creator: '',\n      tags: ''\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n  //title: '', description: '', eventDate: '', eventTime: '', eventLocation: '', deadline: '', selectedFile: '', creator: '', tags: ''\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Event Name\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({\n      ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({\n      ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({\n      ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"eventDate\",\n    variant: \"outlined\",\n    label: \"Event Date\",\n    type: \"date\",\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    value: postData.eventDate,\n    onChange: e => setPostData({\n      ...postData,\n      eventDate: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: _ref2 => {\n      let {\n        base64\n      } = _ref2;\n      return setPostData({\n        ...postData,\n        selectedFile: base64\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n_s(Form, \"qH8Vpaa/3apxVBqKi7kJTDqhhTk=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","_ref","_s","currentId","setCurrentId","postData","setPostData","title","description","eventDate","eventTime","eventLocation","deadline","selectedFile","creator","tags","post","state","posts","find","message","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","createElement","className","paper","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","noValidate","root","form","onSubmit","variant","name","label","fullWidth","value","onChange","target","multiline","rows","split","type","InputLabelProps","shrink","fileInput","multiple","onDone","_ref2","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["/Users/christian-robinson/Desktop/project_mern_memories-PART_1_and_2/client/src/components/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', description: '', eventDate: '', eventTime: '', eventLocation: '', deadline: '', selectedFile: '', creator: '', tags: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', description: '', eventDate: '', eventTime: '', eventLocation: '', deadline: '', selectedFile: '', creator: '', tags: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n  //title: '', description: '', eventDate: '', eventTime: '', eventLocation: '', deadline: '', selectedFile: '', creator: '', tags: ''\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        \n        <TextField name=\"title\" variant=\"outlined\" label=\"Event Name\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Description\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Description\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n        <TextField\n          name=\"eventDate\"\n          variant=\"outlined\"\n          label=\"Event Date\"\n          type=\"date\"\n          fullWidth\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={postData.eventDate}\n          onChange={(e) => setPostData({ ...postData, eventDate: e.target.value })}\n        />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}